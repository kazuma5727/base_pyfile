function venv {
    param(
        # 仮想環境の名前を指定する。デフォルトは"python"
        [Parameter(Mandatory=$false, Position=0)]
        [string]$venvName = "python",

        # 仮想環境で使用するPythonのバージョンを指定する。デフォルトは"3.10.10"
        [Parameter(Mandatory=$false, Position=1)]
        [string]$pythonVersion = "3.10.10",

        # "-U"フラグが指定された場合、pipをアップグレードしてrequirements.txtをインストールする。
        [switch]$upgrade
    )

    # 仮想環境ディレクトリのパスを生成する。
    $venvDir = "C:\python\v$pythonVersion$venvName"

    # 仮想環境ディレクトリが存在しない場合は、作成する。
    if (-not (Test-Path $venvDir)) {
        New-Item -ItemType Directory $venvDir
        # venvを作成するためのコマンドを生成する。
        Invoke-Expression "pyenv install --skip-existing $pythonVersion"
        Invoke-Expression "pyenv global $pythonVersion"
        Invoke-Expression "deactivate"
        $python_path = pyenv which python
        $script = "$python_path -m venv $venvDir"

        # venvを作成するコマンドを実行する。
        Invoke-Expression $script
        Write-Host "Created new virtual environment: $venvName" -ForegroundColor yellow

        # pipとsetuptoolsをアップグレードしてrequirements.txtをインストールする。
        & Invoke-Expression "$venvDir\Scripts\python.exe -m pip install --upgrade pip setuptools"
        & Invoke-Expression "$venvDir\Scripts\pip install -r C:\python\requirements.txt"
        Write-Host "Upgraded pip and installed requirements"  -ForegroundColor Green

    } else {
        Write-Host "Using existing virtual environment: $venvName"  -ForegroundColor Blue
        if ($upgrade) {
            # -Uオプションが指定された場合はpipとsetuptoolsをアップグレードしてrequirements.txtのパッケージを再インストールする。
            & Invoke-Expression "$venvDir\Scripts\python.exe -m pip install --upgrade pip setuptools"
            & Invoke-Expression "$venvDir\Scripts\pip install -r C:\python\requirements.txt"
            Write-Host "Upgraded pip and installed requirements"  -ForegroundColor Green
            
        }
    }
    # 仮想環境をアクティブ化する。
    & $venvDir\Scripts\Activate.ps1
    # 仮想環境のパスを環境変数にセットする。
    # $env:VIRTUAL_ENV = $venvDir
    [System.Environment]::SetEnvironmentVariable("venvPath", "$currentPath;$venvDir", "User")

}

# 既存の仮想環境がある場合、それをアクティブ化する。
# このコードは、スクリプトを開始するときに自動的に実行され、
# Python の仮想環境がある場合にその仮想環境をアクティブ化する。
# 現在アクティブな仮想環境のパスを取得する。
$venvDir = [System.Environment]::GetEnvironmentVariable("venvPath", "User").Split(';') | Select-Object -Last 1
if ($venvDir -and (Test-Path "$venvDir\Scripts\Activate.ps1")) {
    # 仮想環境が存在する場合
    Invoke-Expression $venvDir\Scripts\Activate.ps1
} else {
    # 仮想環境が存在しない場合
    venv
}

